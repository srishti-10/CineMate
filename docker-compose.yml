version: '3.8'

services:
  # MongoDB Service
  mongodb:
    image: mongo:6.0
    container_name: cinemate_mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
    volumes:
      - mongodb_data:/data/db
      - ./mongodb_data:/docker-entrypoint-initdb.d
    networks:
      - cinemate_network

  # Redis Service
  redis:
    image: redis:7-alpine
    container_name: cinemate_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - cinemate_network

  # Neo4j Service
  neo4j:
    image: neo4j:5.11
    container_name: cinemate_neo4j
    restart: unless-stopped
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    environment:
      NEO4J_AUTH: neo4j/password
      NEO4J_PLUGINS: '["apoc"]'
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
      - neo4j_plugins:/plugins
    networks:
      - cinemate_network

  # Backend API Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: cinemate_backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - MONGO_HOST=mongodb
      - MONGO_PORT=27017
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=password
    depends_on:
      - mongodb
      - redis
      - neo4j
    volumes:
      - ./backend:/app
      - ./datasets:/app/datasets
    networks:
      - cinemate_network
    command: python start_server.py

  # Frontend Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: cinemate_frontend
    restart: unless-stopped
    ports:
      - "8501:8501"
    environment:
      - API_BASE_URL=http://backend:8000
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
    networks:
      - cinemate_network
    command: streamlit run app.py --server.port=8501 --server.address=0.0.0.0

volumes:
  mongodb_data:
  redis_data:
  neo4j_data:
  neo4j_logs:
  neo4j_import:
  neo4j_plugins:

networks:
  cinemate_network:
    driver: bridge 